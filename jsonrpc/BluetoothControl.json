{
  "$schema": "interface.schema.json",
  "jsonrpc": "2.0",
  "info": {
    "title": "Bluetooth Control API",
    "class": "BluetoothControl",
    "description": "Bluetooth Control JSON-RPC interface"
  },
  "common": {
    "$ref": "common.json"
  },
  "definitions": {
    "deviceaddress": {
      "description": "Bluetooth address",
      "type": "string",
      "example": "81:6F:B0:91:9B:FE"
    },
    "devicestate": {
      "description": "Device state",
      "type": "string",
      "enum": [ "Pairing", "Paired", "Unpaired", "Connected", "Disconnected" ],
      "example": "Disconnected"
    },
    "devicetype": {
      "description": "Bluetooth device type",
      "type": "string",
      "enum": [ "Classic", "LowEnergy" ],
      "example": "LowEnergy"
    }
  },
  "methods": {
    "scan": {
      "summary": "Starts scanning for Bluetooth devices",
      "events": [ "scancomplete" ],
      "params": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/devicetype"
          },
          "timeout": {
            "description": "Duration of the scan (in seconds); default: 10 seconds",
            "type": "number",
            "example": 60
          }
        },
        "required": [ "type" ]
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Failed to scan",
          "$ref": "#/common/errors/general"
        },
        {
          "description": "Scan already in progress",
          "$ref": "#/common/errors/inprogress"
        }
      ]
    },
    "connect": {
      "summary": "Connects to a Bluetooth device",
      "events": [ "devicestatechange" ],
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          }
        }
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown device",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Device already connected",
          "$ref": "#/common/errors/alreadyconnected"
        },
        {
          "description": "Failed to connect the device",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "disconnect": {
      "summary": "Disconnects from a connected Bluetooth device",
      "events": [ "devicestatechange" ],
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          }
        }
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown device",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Device not connected",
          "$ref": "#/common/errors/alreadyreleased"
        }
      ]
    },
    "pair": {
      "summary": "Pairs a Bluetooth device",
      "description": "The client may expect PIN or passkey requests during the pairing process. The process can be cancelled any time by calling the *abortpairing* method",
      "events": [ "devicestatechange", "pincoderequest", "passkeyrequest", "passkeyconfirmrequest" ],
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          },
          "timeout": {
            "description": "Maximum time allowed for the pairing process to complete (in seconds); default: 20 seconds",
            "type": "integer",
            "size": 16,
            "example": "60"
          }
        },
        "required" : [ "address" ]
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown device",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Device already paired",
          "$ref": "#/common/errors/alreadyconnected"
        },
        {
          "description": "Failed to pair the device",
          "$ref": "#/common/errors/general"
        }
      ]
    },
    "unpair": {
      "summary": "Unpairs a paired Bluetooth device",
      "events": [ "devicestatechange" ],
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          }
        }
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown device",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Device not paired",
          "$ref": "#/common/errors/alreadyreleased"
        }
      ]
    },
    "abortpairing": {
      "summary": "Aborts the pairing process",
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          }
        }
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown device",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Device not currently pairing",
          "$ref": "#/common/errors/illegalstate"
        }
      ]
    },
    "pincode": {
      "summary": "Specifies a PIN code for authentication during a legacy pairing process",
      "description": "This method is to be called upon receiving a *pincoderequest* event during a legacy pairing process. If the specified PIN code is incorrect the pairing process will be aborted.",
      "events": [ "pincoderequest" ],
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          },
          "secret": {
            "description": "A PIN code string, typically consisting of (but not limited to) four decimal digits",
            "type": "string",
            "example": "0000"
          }
        },
        "required": [ "address", "secret"]
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown device",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Device not currently pairing or PIN code has not been requested",
          "$ref": "#/common/errors/illegalstate"
        }
      ]
    },
    "passkey": {
      "summary": "Specifies a passkey for authentication during a pairing process",
      "description": "This method is to be called upon receiving a *passkeyrequest* event during a pairing process. If the specified passkey is incorrect or empty the pairing process will be aborted.",
      "events": [ "passkeyrequest" ],
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          },
          "secret": {
            "description": "A six-digit decimal number passkey",
            "type": "integer",
            "example": 123456
          }
        },
        "required": [ "address", "secret"]
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown device",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Device not currently pairing or a passkey has not been requested",
          "$ref": "#/common/errors/illegalstate"
        }
      ]
    },
    "confirmpasskey": {
      "summary": "Confirms a passkey for authentication during a pairing process",
      "description": "This method is to be called upon receiving a *passkeyconfirmationrequest* event during a pairing process. If the confirmation is negative or the pairing process will be aborted.",
      "events": [ "passkeyconfirmrequest" ],
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          },
          "iscorrect": {
            "description": "Specifies if the passkey sent in *passkeyconfirmrequest* event is correct (true) or incorrect (false)",
            "type": "boolean",
            "example": true
          }
        },
        "required": [ "address", "iscorrect"]
      },
      "result": {
        "$ref": "#/common/results/void"
      },
      "errors": [
        {
          "description": "Unknown device",
          "$ref": "#/common/errors/unknownkey"
        },
        {
          "description": "Device is currently not pairing or passkey confirmation has not been requested",
          "$ref": "#/common/errors/illegalstate"
        }
      ]
    }
  },
  "properties": {
    "adapters": {
      "readonly": true,
      "summary": "List of local Bluetooth adapters",
      "params": {
        "type": "array",
        "items": {
          "description": "Adapter ID",
          "type": "number",
          "size": 16,
          "example": 0
        }
      }
    },
    "adapter": {
      "readonly": true,
      "summary": "Local Bluetooth adapter information",
      "index": {
       "name": "Adapter ID",
       "example": "0"
      } ,
      "params": {
        "type": "object",
        "properties": {
          "interface": {
            "type": "string",
            "example": "hci0",
            "description": "Ndapter interface name"
          },
          "address": {
            "$ref": "#/definitions/deviceaddress"
          },
          "version": {
            "type": "number",
            "description": "Device version",
            "size": 8,
            "example": 8
          },
          "manufacturer": {
            "type": "number",
            "size": 16,
            "description": "Device manufacturer Company Identifer"
          },
          "name": {
            "type": "string",
            "description": "Device name",
            "example": "Thunder"
          },
          "shortname": {
            "type": "string",
            "description": "Device short name",
            "example": "Thunder"
          }
        },
        "required": [ "interface", "address", "version", "deviceclass" ]
      },
      "errors": [
        {
          "description": "Unknown device",
          "$ref": "#/common/errors/unknownkey"
        }
      ]
    },
    "devices": {
      "readonly": true,
      "summary": "List of known remote Bluetooth devices",
      "descrption": "Use this method to retrieve a combined list of previously bonded devices and results of the most recent device scan",
      "params": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/deviceaddress"
        }
      }
    },
    "device": {
      "readonly": true,
      "summary": "Remote Bluetooth device information",
      "index": {
        "name": "Device address",
        "example": "81:6F:B0:91:9B:FE"
      },
      "params": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Acme Bluetooth Device",
            "description": "Name of the device"
          },
          "type": {
            "$ref": "#/definitions/devicetype"
          },
          "class": {
            "type": "integer",
            "example": 2360324,
            "description": "Class of device (3 octets)"
          },
          "connected": {
            "description": "Denotes if the device is currently connected to host",
            "type": "boolean",
            "example": true
          },
          "paired": {
            "description": "Denotes if the device is currently paired with host",
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "name",
          "type",
          "connected",
          "paired"
        ]
      },
      "errors": [
        {
          "description": "Unknown device",
          "$ref": "#/common/errors/unknownkey"
        }
      ]
    }
  },
  "events": {
    "scancomplete": {
      "summary": "Notifies about scan completion",
      "description": "Register to this event to be notified about device scan completion"
    },
    "devicestatechange": {
      "summary": "Notifies about device state change",
      "description": "Register to this event to be notified about device state changes",
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          },
          "state": {
            "$ref": "#/definitions/devicestate"
          },
          "disconnectreason": {
            "type": "string",
            "enum": [ "ConnectionTimeout", "AuthenticationFailure", "RemoteLowOnResources", "RemotePoweredOff","TerminatedByRemote", "TerminatedByHost" ],
            "example": "ConnectionTimeout",
            "description": "Disconnection reason in case of *Disconnected* event"
          }
        },
        "required": [ "address", "state" ]
      }
    },
    "pincoderequest": {
      "summary": "Notifies about a PIN code request",
      "description": "Register to this event to be notified about PIN code requests during a legacy pairing process. Upon receiving this event the client is required to respond with a *pincode* call in order to complete the pairing procedure. The PIN code value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted.<br><br>Note that this event will never be send for a Bluetooth LowEnergy device.",
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          }
        }
      }
    },
    "passkeyrequest": {
      "summary": "Notifies about a passkey request",
      "description": "Register to this event to be notified about passkey requests that may be required during a pairing process. Upon receiving this event the client is required to respond with a *passkey* call in order to complete the pairing procedure. The passkey value would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted.",
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          }
        }
      }
    },
    "passkeyconfirmrequest": {
      "summary": "Notifies about a passkey confirmation request",
      "description": "Register to this event to be notified about passkey confirmation requests that may required during a pairing process. Upon receiving this event the client is required to respond with a *passkeyconfirm* call in order to complete the pairing procedure. The passkey confirmation would typically be collected by prompting the end-user. If the client fails to respond before the pairing timeout elapses the pairing procedure will be aborted.",
      "params": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/definitions/deviceaddress"
          },
          "secret": {
            "description": "A six-digit decimal number passkey sent by the remote device for confirmation",
            "type": "integer",
            "example": 123456
          }
        },
        "required": [ "address", "secret" ]
      }
    }
  }
}
