{
    "$schema": "https://raw.githubusercontent.com/rdkcentral/Thunder/master/Tools/JsonGenerator/schemas/interface.schema.json",
    "jsonrpc": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "DTV API",
        "class": "DTV",
        "format": "uncompliant-collapsed",
        "description": "The `DTV` plugin provides access to DVB services provided by a DVB stack.",
        "legacy": true
    },
    "common": {
        "results": {
            "void": {
              "type": "null",
              "default": null,
              "description": "Always null"
            }
        }
    },
    "definitions": {
        "countrycode": {
            "description": "3-character ISO code for the country",
            "type": "number",
            "size": 32,
            "example": 6775410
        },
        "countryconfig": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the country as a UTF-8 string",
                    "type": "string",
                    "example": "UK"
                },
                "code": {
                    "$ref": "#/definitions/countrycode"
                }
            },
            "required": [
                "name",
                "code"
            ]
        },
        "tunertype": {
            "description": "Tuner type",
            "type": "string",
            "enum": [
                "none",
                "dvbs",
                "dvbt",
                "dvbc"
            ],
            "enumvalues": [
                0,
                1,
                2,
                4
            ]
        },
        "lnbtype": {
            "description": "LNB type",
            "type": "string",
            "enum": [
                "single",
                "universal",
                "unicable"
            ]
        },
        "lnbpower": {
            "description": "LNB power values",
            "type": "string",
            "enum":[
                "off",
                "on",
                "auto"
            ]
        },
        "diseqc_cswitch": {
            "description": "Diseqc cswitch",
            "type": "string",
            "enum": [
                "off",
                "a",
                "b",
                "c",
                "d"
            ]
        },
        "diseqc_tone": {
            "description": "Diseqc Tone",
            "type": "string",
            "enum": [
                "off",
                "a",
                "b"
            ]
        },
        "lnbsettings": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "User specified name for the LNB settings",
                    "type": "string",
                    "example": "Universal"
                },
                "type": {
                    "$ref": "#/definitions/lnbtype",
                    "example": "universal"
                },
                "power": {
                    "$ref": "#/definitions/lnbpower",
                    "example": "auto"
                },
                "diseqc_tone": {
                    "$ref": "#/definitions/diseqc_tone",
                    "example": "off"
                },
                "diseqc_cswitch": {
                    "$ref": "#/definitions/diseqc_cswitch",
                    "example": "off"
                },
                "is22k": {
                    "description": "22kHz tone on/off",
                    "type": "boolean"
                },
                "is12v": {
                    "description": "12 volts on/off",
                    "type": "boolean"
                },
                "ispulseposition": {
                    "description": "Pulse position motor used to control dish position",
                    "type": "boolean"
                },
                "isdiseqcposition": {
                    "description": "Dish positioning is controlled by DiSEqC",
                    "type": "boolean"
                },
                "issmatv": {
                    "description": "SMATV switcher on/off",
                    "type": "boolean"
                },
                "diseqcrepeats": {
                    "description": "Number of times to send a DiSEqC message to make sure it's been received",
                    "type": "number",
                    "signed": false,
                    "size": 8
                },
                "u_switch": {
                    "description": "DiSEqC uncommitted switch selector",
                    "type": "number",
                    "signed": false,
                    "size": 8
                },
                "unicablechannel": {
                    "description": "Unicable channel",
                    "type": "number",
                    "signed": false,
                    "size": 8
                },
                "unicablefreq": {
                    "description": "Unicable frequency",
                    "type": "number",
                    "signed": false,
                    "size": 32
                }
            },
            "required": [
                "name",
                "type",
                "power",
                "diseqc_tone",
                "diseqc_cswitch",
                "is22k",
                "is12v",
                "ispulseposition",
                "isdiseqcposition",
                "issmatv",
                "diseqcrepeats",
                "u_switch",
                "unicablechannel",
                "unicableinterface"
            ]
        },
        "satellitesettings": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "User specified name for the satellite settings",
                    "type": "string",
                    "example": "Astra 28.2E"
                },
                "longitude": {
                    "description": "Longitudinal location of the satellite in 1/10ths of a degree, with an east coordinate given as a positive value and a west coordinate as negative. Astra 28.2E would be defined as 282 and Eutelsat 5.0W would be -50.",
                    "type": "number",
                    "signed": true,
                    "size": 16,
                    "example": 282
                },
                "lnb": {
                    "description": "Name of the LNB settings to be used when tuning to this satellite",
                    "type": "string",
                    "example": "Universal"
                }
            },
            "required": [
                "name",
                "longitude",
                "lnb"
            ]
        },
        "polarity": {
            "description": "Polarity setting",
            "type": "string",
            "enum": [
                "horizontal",
                "vertical",
                "left",
                "right"
            ]
        },
        "fec": {
            "description": "Forward error correction setting",
            "type": "string",
            "enum": [
                "fecauto",
                "fec1_2",
                "fec2_3",
                "fec3_4",
                "fec5_6",
                "fec7_8",
                "fec1_4",
                "fec1_3",
                "fec2_5",
                "fec8_9",
                "fec9_10",
                "fec3_5",
                "fec4_5"
            ]
        },
        "dvbsmodulation": {
            "description": "DVB S Modulation supported by the platform",
            "type": "string",
            "enum": [
                "auto",
                "qpsk",
                "8psk",
                "16qam"
            ]
        },
        "searchtype": {
            "description": "Supported Search Type",
            "type": "string",
            "enum": [
                "frequency",
                "network"
            ]
        },
        "dvbstuningparams": {
            "description": "Parameters required to tune to a DVB-S/S2 signal",
            "type": "object",
            "properties": {
                "satellite": {
                    "description": "Name of the satellite settings to be used",
                    "type": "string",
                    "example": "Astra 28.2"
                },
                "frequency": {
                    "description": "Frequency of the transponder, in kHz",
                    "type": "number",
                    "signed": false,
                    "size": 32,
                    "example": 10714000
                },
                "polarity": {
                    "$ref": "#/definitions/polarity",
                    "example": "horizontal"
                },
                "symbolrate": {
                    "description": "Symbol rate in Ksymb/sec",
                    "type": "number",
                    "signed": false,
                    "size": 16,
                    "example": 22000
                },
                "fec": {
                    "$ref": "#/definitions/fec",
                    "example": "fec5_6"
                },
                "modulation": {
                    "$ref": "#/definitions/dvbsmodulation",
                    "example": "qpsk"
                },
                "dvbs2": {
                    "description": "True when tuning to a DVB-S2 signal",
                    "type": "boolean"
                }
            },
            "required": [
                "satellite",
                "frequency",
                "polarity",
                "symbolrate",
                "fec",
                "modulation",
                "dvbs2"
            ]
        },
        "dvbcmodulation": {
            "description": "DVB C Modulation supported by the platform",
            "type": "string",
            "enum": [
                "auto",
                "4qam",
                "8qam",
                "16qam",
                "32qam",
                "64qam",
                "128qam",
                "256qam"
            ]
        },
        "dvbctuningparams": {
            "description": "Parameters required to tune to a DVB-C signal",
            "type": "object",
            "properties": {
                "frequency": {
                    "description": "Frequency of the transport, in Hz",
                    "type": "number",
                    "signed": false,
                    "size": 32,
                    "example": 474000000
                },
                "symbolrate": {
                    "description": "Symbol rate in Ksymb/sec",
                    "type": "number",
                    "signed": false,
                    "size": 16,
                    "example": 6900
                },
                "modulation": {
                    "$ref": "#/definitions/dvbcmodulation",
                    "example": "128qam"
                }
            },
            "required": [
                "frequency",
                "symbolrate",
                "modulation"
            ]
        },
        "dvbtbandwidth": {
            "description": "Channel bandwidth",
            "type": "string",
            "enum": [
                "5MHz",
                "6MHz",
                "7MHz",
                "8MHz",
                "10MHz",
                "undefined"
             ]
        },
        "ofdmmode": {
            "description": "OFDM mode",
            "type": "string",
            "enum": [
                "ofdm_1K",
                "ofdm_2K",
                "ofdm_4K",
                "ofdm_8K",
                "ofdm_16K",
                "ofdm_32K",
                "undefined"
            ]
        },
        "dvbttuningparams": {
            "description": "Parameters required to tune to a DVB-T/T2 signal",
            "type": "object",
            "properties": {
                "frequency": {
                    "description": "Frequency of the transport, in Hz",
                    "type": "number",
                    "signed": false,
                    "size": 32,
                    "example": 474000000
                },
                "bandwidth": {
                    "$ref": "#/definitions/dvbtbandwidth",
                    "example": "8MHz"
                },
                "mode": {
                    "$ref": "#/definitions/ofdmmode",
                    "example": "ofdm_32K"
                },
                "dvbt2": {
                    "description": "True when tuning to a DVB-T2 signal",
                    "type": "boolean"
                },
                "plpid": {
                    "description": "PLP ID for tuning to a DVB-T2 signal",
                    "type": "number",
                    "signed": false,
                    "size": 8
                }
            },
            "required": [
                "frequency",
                "bandwidth",
                "mode",
                "dvbt2"
            ]
        },
        "dvburistring": {
            "description": "DVB triplet of the form a.b.c, where 'a' is the original network ID, 'b' is the transport ID and 'c' is the service ID, in decimal",
            "type": "string",
            "example": "2.2041.9212"
        },
        "servicetype": {
            "description": "(Version 2) Service type as given by the service descriptor in the SDT",
            "type": "string",
            "enum": [
                "tv",
                "radio",
                "teletext",
                "nvod",
                "nvod_timeshift",
                "mosaic",
                "avc_radio",
                "avc_mosaic",
                "data",
                "mpeg2_hd",
                "avc_sd_tv",
                "avc_sd_nvod_timeshift",
                "avc_sd_nvod",
                "hd_tv",
                "avc_hd_nvod_timeshift",
                "avc_hd_nvod",
                "uhd_tv",
                "unknown"
            ]
        },
        "runningstatus": {
            "description": "(Version 2) The running status as given by the service descriptor in the SDT",
            "type": "string",
            "enum": [
                 "undefined",
                 "notrunning",
                 "startssoon",
                 "pausing",
                 "running",
                 "offair"
            ],
            "example": "running"
        },
        "service": {
            "description": "Service information",
            "type": "object",
            "properties": {
                "fullname": {
                    "description": "(Version 2) Full service name as given by the service descriptor in the SDT",
                    "type": "string",
                    "example": "Channel 4"
                },
                "shortname": {
                    "description": "Short service name as given by the service descriptor in the SDT",
                    "type": "string",
                    "example": "C4"
                },
                "dvburi": {
                    "$ref": "#/definitions/dvburistring"
                },
                "servicetype": {
                    "$ref": "#/definitions/servicetype",
                    "example": "tv"
                },
                "lcn": {
                    "description": "Logical channel number",
                    "type": "number",
                    "size": 16,
                    "example": 1001
                },
                "scrambled": {
                    "description": "(Version 2) True if the service is marked as scrambled in the SDT",
                    "type": "boolean"
                },
                "hascadescriptor": {
                    "description": "(Version 2) True if there is at least one CA descriptor in the service's PMT",
                    "type": "boolean"
                },
                "hidden": {
                    "description": "(Version 2) True if the service should be hidden",
                    "type": "boolean"
                },
                "selectable": {
                    "description": "(Version 2) True if the service should be user selectable",
                    "type": "boolean"
                },
                "runningstatus": {
                    "$ref": "#/definitions/runningstatus"
                }
            },
            "required": [
                "fullname",
                "shortname",
                "dvburi",
                "servicetype",
                "lcn",
                "scrambled",
                "hascadescriptor",
                "hidden",
                "selectable",
                "runningstatus"
            ]
        },
        "transport": {
            "description": "(Version 2) Details for a transport",
            "type": "object",
            "properties": {
                "tunertype": {
                    "$ref": "#/definitions/tunertype",
                    "example": "dvbt"
                },
                "originalnetworkid": {
                    "description": "Original network ID of the transport",
                    "type": "number",
                    "signed": false,
                    "size": 16,
                    "example": 8204
                },
                "transportid": {
                    "description": "Transport ID of the transport",
                    "type": "number",
                    "signed": false,
                    "size": 16,
                    "example": 8204
                },
                "strength": {
                    "description": "Signal strength as a percentage",
                    "type": "number",
                    "signed": false,
                    "size": 8,
                    "example": "76"
                },
                "quality": {
                    "description": "Signal quality as a percentage",
                    "type": "number",
                    "signed": false,
                    "size": 8,
                    "example": "95"
                },
                "dvbctuningparams": {
                    "$ref": "#/definitions/dvbctuningparams"
                },
                "dvbstuningparams": {
                    "$ref": "#/definitions/dvbstuningparams"
                },
                "dvbttuningparams": {
                    "$ref": "#/definitions/dvbttuningparams"
                }
            },
            "required": [
               "tunertype",
               "originalnetworkid",
               "transportid",
               "strength",
               "quality"
            ]
        },
        "eitevent": {
            "description": "EIT event information",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the DVB event as defined in the short event descriptor",
                    "type": "string",
                    "example": "Channel 4 News"
                },
                "starttime": {
                    "type": "number",
                    "signed": false,
                    "size": 32,
                    "description": "UTC start time of the event in seconds",
                    "example": 1587562065
                },
                "duration": {
                    "description": "Duration of the event in seconds",
                    "type": "number",
                    "signed": false,
                    "size": 32,
                    "example": 1800
                },
                "eventid": {
                    "description": "ID of the event from the event information table",
                    "type": "number",
                    "signed": false,
                    "size": 16,
                    "example": 3012
                },
                "shortdescription": {
                    "description": "Event description from the EIT short event descriptor",
                    "type": "string",
                    "example": "The current national and world news"
                },
                "hassubtitles": {
                    "description": "(Version 2) True if subtitles are available",
                    "type": "boolean"
                },
                "hasaudiodescription": {
                    "description": "(Version 2) True if audio description is available",
                    "type": "boolean"
                },
                "parentalrating": {
                    "description": "(Version 2) Parental rating for the event, will be 0 if undefined",
                    "type": "number",
                    "signed": false,
                    "size": 8,
                    "example": 12
                },
                "contentdata": {
                    "description": "(Version 2) The first 2 4-bit values from the content descriptor as separate bytes",
                    "type": "array",
                    "items": {
                        "type": "number",
                        "signed": false,
                        "size": 8
                    }
                },
                "hasextendedinfo": {
                    "description": "(Version 2) True if there's extended event information available",
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "starttime",
                "duration",
                "eventid",
                "shortdescription",
                "hassubtitles",
                "hasaudiodescription",
                "parentalrating",
                "contentdata",
                "hasextendedinfo"
            ]
        },
        "extendedeventitem": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description of the item",
                    "type": "string",
                    "example": "Actor 1"
                },
                "item": {
                    "description": "Item text",
                    "type": "string",
                    "example": "Kermit The Frog"
                }
            }
        },
        "extendedeventinfo": {
            "description": "(Version 2) Event information from the EIT extended event descriptor",
            "type": "object",
            "properties": {
                "description": {
                    "description": "Extended event description text",
                    "type": "string",
                    "example": "A long event description"
                },
                "items": {
                    "description": "An array of extended event item",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/extendedeventitem"
                    }
                }
            },
            "required": [
            ]
        },
        "codec": {
            "description": "Video or audio codec type",
            "type": "string",
            "enum": [
                "mpeg2",
                "h264",
                "h265",
                "avs",
                "mpeg1",
                "aac",
                "heaac",
                "heaacv2",
                "ac3",
                "eac3"
            ]
        },
        "component": {
            "description": "Video, audio, subtitle, teletext or data component info",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type of data contained in this component",
                    "type": "string",
                    "enum": [
                        "video",
                        "audio",
                        "subtitles",
                        "teletext",
                        "data"
                    ],
                    "example": "video"
                },
                "tags": {
                    "description": "Array of component tags",
                    "type": "array",
                    "items": {
                        "type": "number",
                        "signed": false,
                        "size": 8
                    }
                },
                "pid": {
                    "description": "PID of the component",
                    "type": "number",
                    "signed": false,
                    "size": 16,
                    "example": 1100
                },
                "video": {
                    "description": "Video related information for a video component",
                    "type": "object",
                    "properties": {
                        "codec": {
                            "$ref": "#/definitions/codec"
                        }
                    }
                },
                "audio": {
                    "description": "Audio related information for an audio component",
                    "type": "object",
                    "properties": {
                        "codec": {
                            "$ref": "#/definitions/codec"
                        },
                        "language": {
                            "description": "ISO 3-char language code",
                            "type": "string",
                            "example": "eng"
                        },
                        "type": {
                            "description": "Type of the audio contained in the component",
                            "type": "string",
                            "enum": [
                                "undefined",
                                "clean",
                                "hearingimpaired",
                                "visuallyimpaired",
                                "unknown"
                            ],
                            "example": "normal"
                        },
                        "mode": {
                            "description": "Audio mode",
                            "type": "string",
                            "enum": [
                                "mono",
                                "left",
                                "right",
                                "stereo",
                                "multichannel",
                                "undefined"
                            ]
                        }
                    },
                    "required": [
                        "language",
                        "type",
                        "mode"
                    ]
                },
                "subtitles": {
                    "description": "DVB subtitle related information for a subtitle component",
                    "type": "object",
                    "properties": {
                        "language": {
                            "description": "ISO 3-char language code",
                            "type": "string",
                            "example": "eng"
                        },
                        "format": {
                            "description": "Intended TV format for the subtitles",
                            "type": "string",
                            "enum": [
                                "default",
                                "4_3",
                                "16_9",
                                "221_1",
                                "hd",
                                "hardofhearing",
                                "hardofhearing4_3",
                                "hardofhearing16_9",
                                "hardofhearing221_1",
                                "hardofhearinghd"
                            ]
                        },
                        "compositionpage": {
                            "description": "Composition page to be used for subtitles in this component",
                            "type": "number",
                            "signed": false,
                            "size": 16
                        },
                        "ancillarypage": {
                            "description": "Ancillary page to be used for subtitles in this component",
                            "type": "number",
                            "signed": false,
                            "size": 16
                        }
                    },
                    "required": [
                        "language",
                        "format",
                        "compositionpage",
                        "ancillarypage"
                    ]
                },
                "teletext": {
                    "description": "Teletext related information for a teletext component",
                    "type": "object",
                    "properties": {
                        "language": {
                            "description": "ISO 3-char language code",
                            "type": "string",
                            "example": "eng"
                        },
                        "type": {
                            "description": "Type of teletext data",
                            "type": "number",
                            "signed": false,
                            "size": 8
                        },
                        "magazine": {
                            "description": "Magazine number for this type and language",
                            "type": "number",
                            "signed": false,
                            "size": 8
                        },
                        "page": {
                            "description": "Page number for this type and language",
                            "type": "number",
                            "signed": false,
                            "size": 8
                        }
                    },
                    "required": [
                        "language",
                        "type",
                        "magazine",
                        "page"
                    ]
                }
            },
            "required": [
                "type",
                "pid"
            ]
        },
        "eventtype": {
            "description": "Event type that's sent as an asynchronous notification",
            "type": "string",
            "enum": [
                "ServiceSearchStatus",
                "serviceupdated",
                "serviceadded",
                "servicedeleted",
                "videochanged",
                "audiochanged",
                "subtitleschanged",
                "eventchanged"
            ]
        }
    },
    "properties": {
        "numberOfCountries": {
            "summary": "Number of country configurations available",
            "readonly": true,
            "params": {
                "type": "number",
                "signed": false,
                "size": 8,
                "example": 5
            }
        },
        "countryList": {
            "summary": "Array containing the name and 3 character ISO country code for all the available country configurations",
            "readonly": true,
            "params": {
                "type": "array",
                "description": "List of available country configurations",
                "items": {
                    "$ref": "#/definitions/countryconfig"
                }
            }
        },
        "country": {
            "summary": "Country configuration using the ISO 3-character country code",
            "params": {
                "$ref": "#/definitions/countrycode"
            }
        },
        "lnbList": {
            "summary": "Array of LNBs defined in the database",
            "readonly": true,
            "params": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/lnbsettings"
                }
            }
        },
        "satelliteList": {
            "summary": "Array of satellites defined in the database",
            "readonly": true,
            "params": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/satellitesettings"
                }
            }
        },
        "numberOfServices": {
            "summary": "Total number of services in the service database",
            "readonly": true,
            "params": {
                "type": "number",
                "signed": false,
                "size": 16,
                "example": 145
            }
        },
        "serviceList": {
            "summary": "List of services for the given type of tuner, transport (version 2), or all services if neither is given",
            "readonly": true,
            "index": {
                "name": "Optional tuner type, or transport DVB doublet",
                "example": "dvbs or 9018.4161"
            },
            "params": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/service"
                }
            }
        },
        "serviceInfo": {
            "summary": "Information for the given service as defined by its DVB triplet URI",
            "readonly": true,
            "index": {
                "name": "Service URI string",
                "example": "9018.4161.1001"
            },
            "params": {
                "$ref": "#/definitions/service"
            }
        },
        "serviceComponents": {
            "summary": "(Version 2) array of components for the given service defined by its URI",
            "readonly": true,
            "index": {
                "name": "Service URI string",
                "example": "9018.4161.1001"
            },
            "params": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/component"
                }
            }
        },
        "transportInfo": {
            "summary": "Information for the given transport as defined by its DVB doublet URI",
            "readonly": true,
            "index": {
                "name": "Transport URI string",
                "example": "9018.4161"
            },
            "params": {
                "$ref": "#/definitions/transport"
            }
        },
        "nowNextEvents": {
            "summary": "Now and next events (EITp/f) for the given service",
            "readonly": true,
            "index": {
                "name": "Service URI string",
                "example": "9018.4161.1001"
            },
            "params": {
                "type": "object",
                "properties": {
                    "now": {
                        "$ref": "#/definitions/eitevent"
                    },
                    "next": {
                        "$ref": "#/definitions/eitevent"
                    }
                },
                "required": [
                ]
            }
        },
        "scheduleEvents": {
            "summary": "Events which are scheduled (EITsched) for the given service",
            "readonly": true,
            "index": {
                "name": "Service URI string, with optional start and end times as number of seconds UTC",
                "example": "9018.4161.1001:12345000,12346000"
            },
            "params": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/eitevent"
                }
            }
        },
        "extendedEventInfo": {
            "summary": "Extended event info for the given service and event ID (version 2)",
            "readonly": true,
            "index": {
                "name": "Service URI string and event ID",
                "example": "9018.4161.1001:3012"
            },
            "params": {
                "$ref": "#/definitions/extendedeventinfo"
            }
        },
        "status": {
            "summary": "Information related to the play handle defined by the index",
            "readonly": true,
            "index": {
                "name": "Play handle",
                "example": "0"
            },
            "params": {
                "type": "object",
                "properties": {
                    "tuner": {
                        "description": "The tuner id used by the play handle",
                        "type": "number",
                        "signed": false,
                        "size": 8,
                        "example": 0
                    },
                    "demux": {
                        "description": "The demux id used by the play handle",
                        "type": "number",
                        "signed": false,
                        "size": 8,
                        "example": 0
                    },
                    "pmtpid": {
                        "description": "The PMT PID of the service being played",
                        "type": "number",
                        "signed": false,
                        "size": 16,
                        "example": 1100
                    },
                    "dvburi": {
                        "$ref": "#/definitions/dvburistring"
                    },
                    "lcn": {
                        "description": "LCN of the service being played",
                        "type": "number",
                        "signed": false,
                        "size": 16,
                        "example": 1001
                     }
                },
                "required": [
                    "tuner",
                    "demux",
                    "pmtpid",
                    "dvburi",
                    "lcn"
                ]
            }
        },
        "signalInfo": {
            "summary": "Strength and quality of the currently tuned signal for the given play handle (version 2)",
            "readonly": true,
            "index": {
                "name": "Play handle",
                "example": "0"
            },
            "params": {
                "type": "object",
                "properties": {
                    "locked": {
                        "description": "Tuned locked status",
                        "type": "boolean"
                    },
                    "strength": {
                        "description": "The signal strength as a percentage",
                        "type": "number",
                        "signed": false,
                        "size": 8,
                        "example": "76"
                    },
                    "quality": {
                        "description": "The signal quality as a percentage",
                        "type": "number",
                        "signed": false,
                        "size": 8,
                        "example": "95"
                    }
                },
                "required": [
                    "locked",
                    "strength",
                    "quality"
                ]
            }
        }
    },
    "methods": {
        "addLnb": {
            "summary": "Add a new LNB to the database.",
            "params": {
                "$ref": "#/definitions/lnbsettings"
            },
            "result": {
                "description": "Return true if the LNB is added, false otherwise",
                "type": "boolean",
                "example": true
            }
        },
        "addSatellite": {
            "summary": "Add a new satellite to the database.",
            "params": {
                "$ref": "#/definitions/satellitesettings"
            },
            "result": {
                "type": "boolean",
                "description": "Return true if the satellite is added, false otherwise",
                "example": true
            }
        },
        "startServiceSearch": {
            "summary": "Starts a service search.",
            "params": {
                "type": "object",
                "properties": {
                    "tunertype": {
                        "$ref": "#/definitions/tunertype",
                        "example": "dvbs"
                    },
                    "searchtype": {
                        "$ref": "#/definitions/searchtype",
                        "example": "network"
                    },
                    "retune": {
                        "description": "Set to true if current services are to be replaced in the database, false if the scan is to update the existing services",
                        "type": "boolean"
                    },
                    "usetuningparams": {
                        "description": "Set to true if the optional tuning parameters are defined",
                        "type": "boolean",
                        "example": true
                    },
                    "dvbstuningparams": {
                        "$ref": "#/definitions/dvbstuningparams"
                    },
                    "dvbctuningparams": {
                        "$ref": "#/definitions/dvbctuningparams"
                    },
                    "dvbttuningparams": {
                        "$ref": "#/definitions/dvbttuningparams"
                    }
                },
                "required": [
                    "tunertype",
                    "searchtype",
                    "retune",
                    "usetuningparams"
                ]
            },
            "result": {
                "type": "boolean",
                "description": "Return true if the search is started, false otherwise",
                "example": true
            },
            "events": [
                "searchstatus",
                "serviceupdated"
            ]
        },
        "finishServiceSearch": {
            "summary": "Finishes a service search.",
            "params": {
                "type": "object",
                "properties": {
                    "tunertype": {
                        "$ref": "#/definitions/tunertype",
                        "example": "dvbs"
                    },
                    "savechanges": {
                        "description": "Set true if the services found during the search should be saved",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "tunertype",
                    "savechanges"
                ]
            },
            "result": {
                "description": "Return false if the tunertype isn't valid, true otherwise",
                "type": "boolean",
                "example": true
            }
        },
        "startPlaying": {
            "summary": "Starts playing the specified service.",
            "params": {
                "type": "object",
                "properties": {
                    "dvburi": {
                        "$ref": "#/definitions/dvburistring"
                    },
                    "lcn": {
                        "description": "LCN of the service to be tuned to",
                        "type": "number",
                        "signed": false,
                        "size": 16
                    },
                    "monitoronly": {
                        "description": "(Version 2) set to 'true' to monitor SI/PSI data only. Will default to 'false' if not defined",
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                ]
            },
            "result": {
                "description": "The play handle assigned to play the given service. Will be -1 if the service can't be played",
                "type": "number",
                "example": 0
            },
            "events": [
                "serviceupdated",
                "eventchanged",
                "videochanged",
                "audiochanged",
                "subtitleschanged"
            ]
        },
        "stopPlaying": {
            "summary": "Stops playing the specified service.",
            "params": {
                "description": "The play handle returned by startPlaying",
                "type": "number",
                "example": 0
            },
            "result": {
                "$ref": "#/common/results/void"
            }
        }
    },
    "events": {
        "searchstatus": {
            "summary": "Triggered during the course of a service search",
            "params": {
                "type": "object",
                "properties": {
                    "handle": {
                        "description": "The handle assigned for the search and to which this information is relevant",
                        "type": "number",
                        "size": 32,
                        "unsigned": true,
                        "example": 0
                    },
                    "eventtype": {
                        "$ref": "#/definitions/eventtype",
                        "example": "ServiceSearchStatus"
                    },
                    "finished": {
                        "description": "Set to true if the service search has finished, false otherwise",
                        "type": "boolean",
                        "example": false
                    },
                    "progress": {
                        "description": "Progress of the search expressed as a percentage",
                        "type": "number",
                        "size": 8,
                        "unsigned": true,
                        "example": 65
                    },
                    "transport": {
                       "$ref": "#/definitions/transport"
                    }
                },
                "required": [
                    "handle",
                    "eventtype",
                    "finished",
                    "progress"
                ]
            }
        },
        "serviceupdated": {
            "summary": "(Version 2) Notification sent when details of a service have changed, such as its name, service type, running or scrambled state",
            "params": {
                "type": "object",
                "properties": {
                    "eventtype": {
                        "$ref": "#/definitions/eventtype",
                        "example": "ServiceUpdated"
                    },
                    "service": {
                        "$ref": "#/definitions/service"
                    }
                },
                "required": [
                    "eventtype",
                    "service"
                ]
            }
        },
        "serviceadded": {
            "summary": "(Version 2) Notification sent when a new service has been dynamically added to the service list",
            "params": {
                "type": "object",
                "properties": {
                    "eventtype": {
                        "$ref": "#/definitions/eventtype",
                        "example": "ServiceAdded"
                    },
                    "service": {
                        "$ref": "#/definitions/service"
                    }
                },
                "required": [
                    "eventtype",
                    "service"
                ]
            }
        },
        "servicedeleted": {
            "summary": "(Version 2) Notification sent when a service has been deleted from the service list",
            "params": {
                "type": "object",
                "properties": {
                    "eventtype": {
                        "$ref": "#/definitions/eventtype",
                        "example": "ServiceDeleted"
                    },
                    "service": {
                        "$ref": "#/definitions/service"
                    }
                },
                "required": [
                    "eventtype",
                    "service"
                ]
            }
        },
        "videochanged": {
            "summary": "(Version 2) Notification sent when the video PID or codec has changed",
            "params": {
                "type": "object",
                "properties": {
                    "eventtype": {
                        "$ref": "#/definitions/eventtype",
                        "example": "VideoChanged"
                    },
                    "service": {
                        "$ref": "#/definitions/service"
                    }
                },
                "required": [
                    "eventtype",
                    "service"
                ]
            }
        },
        "audiochanged": {
            "summary": "(Version 2) Notification sent when the audio PID or codec has changed",
            "params": {
                "type": "object",
                "properties": {
                    "eventtype": {
                        "$ref": "#/definitions/eventtype",
                        "example": "AudioChanged"
                    },
                    "service": {
                        "$ref": "#/definitions/service"
                    }
                },
                "required": [
                    "eventtype",
                    "service"
                ]
            }
        },
        "subtitleschanged": {
            "summary": "(Version 2) Notification sent when the subtitles have changed",
            "params": {
                "type": "object",
                "properties": {
                    "eventtype": {
                        "$ref": "#/definitions/eventtype",
                        "example": "SubtitlesChanged"
                    },
                    "service": {
                        "$ref": "#/definitions/service"
                    }
                },
                "required": [
                    "eventtype",
                    "service"
                ]
            }
        },
        "eventchanged": {
            "summary": "(Version 2) Notification sent when the EIT 'now' event is received when starting to play a service and when the 'now' event changes",
            "params": {
                "type": "object",
                "properties": {
                    "eventtype": {
                        "$ref": "#/definitions/eventtype",
                        "example": "EventChanged"
                    },
                    "service": {
                        "$ref": "#/definitions/service"
                    },
                    "event": {
                        "$ref": "#/definitions/eitevent"
                    }
                },
                "required": [
                    "eventtype",
                    "service",
                    "event"
                ]
            }
        }
    }
}
